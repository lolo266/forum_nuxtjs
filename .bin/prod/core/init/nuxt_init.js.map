{"version":3,"sources":["../../../../server/core/init/nuxt_init.js"],"names":["Init","App","configNuxt","require","path","resolve","dev","process","env","NODE_ENV","nuxt","Nuxt","Promise","res","use","render","Builder","build"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;AAEO,MAAMA,sBAAQC,GAAD,IAAS;AACzB,UAAMC,aAAaC,QAAQC,eAAKC,OAAL,CAAa,kBAAb,CAAR,CAAnB;AACAH,eAAWI,GAAX,GAAiB,EAAEC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,CAAjB;AACA,UAAMC,OAAO,IAAIC,UAAJ,CAAST,UAAT,CAAb;;AAEA,WAAO,IAAIU,OAAJ,CAAY,MAAMC,GAAN,IAAa;AAC5BZ,YAAIa,GAAJ,CAAQJ,KAAKK,MAAb;;AAEA,YAAIb,WAAWI,GAAf,EAAoB;AAChB,kBAAM,IAAIU,aAAJ,CAAYN,IAAZ,EAAkBO,KAAlB,EAAN;AACA,mBAAOJ,KAAP;AACH;;AAEDA;AACH,KATM,CAAP;AAUH,CAfM;AAHP","file":"nuxt_init.js","sourcesContent":["import path from 'path';\r\n//import { Nuxt, Builder } from 'nuxt';\r\nimport { Nuxt, Builder } from 'nuxt';\r\n\r\nexport const Init = (App) => {\r\n    const configNuxt = require(path.resolve('./nuxt.config.js'));\r\n    configNuxt.dev = !(process.env.NODE_ENV === 'production');\r\n    const nuxt = new Nuxt(configNuxt);\r\n    \r\n    return new Promise(async res => {\r\n        App.use(nuxt.render)\r\n\r\n        if (configNuxt.dev) {\r\n            await new Builder(nuxt).build();      \r\n            return res();\r\n        } \r\n        \r\n        res();\r\n    });\r\n}"]}