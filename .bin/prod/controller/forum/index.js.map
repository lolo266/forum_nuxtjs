{"version":3,"sources":["../../../../server/controller/forum/index.js"],"names":["StringLib","GetLatest","req","res","Topics","Server","DB","ForumTopics","find","select","populate","path","sort","skip","params","Number","limit","json","err","topics","e","status","toString","GetAllCategory","Categorys","ForumCategorys","categorys","GetCategory","Category","findOne","link","category","_id","title","GetChild","Child","ForumChilds","child","GetTopic","Topic","topic","CreateTopic","content","setting","body","auth","Msg","user","offline","vip","isMod","mod","item","isSmod","smod","newTopic","creator","noftication","post","save","DeleteTopic","ID","isCreator","remove","EditTopic","Content","SettingPostTopic","CreatePost","MutiSpace","newPosts","ForumPosts","update","Date","now","Search","key","Case","Query","$search"],"mappings":"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","file":"index.js","sourcesContent":["import * as StringLib from '../../plugins/stringcase' ;\r\n\r\n//Latest\r\nexport const GetLatest = async (req, res) => {\r\n    try {\r\n        let Topics = await Server.DB.ForumTopics\r\n        .find({})\r\n        .select('category child creator title update link')\r\n        .populate({path: 'category', select: 'title link'})\r\n        .populate({path: 'child', select: 'title link'})\r\n        .populate({path: 'creator', select: 'profile'})\r\n        .populate({path: 'numPosts'})\r\n        .sort({'update' : -1 })\r\n        .skip((req.params.skip == 0 || !req.params.skip) ? null :Number(req.params.skip))\r\n        .limit(10)\r\n        \r\n        res.json({err: false, topics: Topics});\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\n//Category\r\nexport const GetAllCategory = async (req, res) => {\r\n    try {\r\n        let Categorys = await Server.DB.ForumCategorys\r\n        .find({})\r\n        .select('title')\r\n        .populate({ \r\n            path: 'childs', select: 'title vip link',\r\n            populate: { path: 'numTopics' }\r\n        })\r\n\r\n        res.json({err: false, categorys: Categorys});\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\nexport const GetCategory = async (req, res) => {\r\n    try {\r\n        let Category = await Server.DB.ForumCategorys\r\n        .findOne({link: req.params.link})\r\n        .select('title');\r\n\r\n        if(!Category) throw 'Khu vực này không tồn tại hoặc đã bị xóa';\r\n\r\n        let Topics = await Server.DB.ForumTopics\r\n        .find({category: Category._id})\r\n        .select('category child creator title update link')\r\n        .populate({path: 'category', select: 'title link'})\r\n        .populate({path: 'child', select: 'title link'})\r\n        .populate({path: 'creator', select: 'profile'})\r\n        .populate({path: 'numPosts'})\r\n        .sort({'update' : -1 })\r\n        .skip((req.params.skip == 0 || !req.params.skip) ? null :Number(req.params.skip))\r\n        .limit(10);\r\n\r\n        res.json({err: false, topics: Topics, title: Category.title});\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\n//Child\r\nexport const GetChild = async (req, res) => {\r\n    try {\r\n        let Child = await Server.DB.ForumChilds\r\n        .findOne({link: req.params.link})\r\n        .select('title')\r\n\r\n        if(!Child) throw 'Khu vực này không tồn tại hoặc đã bị xóa';\r\n\r\n        let Topics = await Server.DB.ForumTopics\r\n        .find({child: Child._id})\r\n        .select('category child creator title update link')\r\n        .populate({path: 'category', select: 'title link'})\r\n        .populate({path: 'child', select: 'title link'})\r\n        .populate({path: 'creator', select: 'profile'})\r\n        .populate({path: 'numPosts'})\r\n        .sort({'update' : -1 })\r\n        .skip((req.params.skip == 0 || !req.params.skip) ? null :Number(req.params.skip))\r\n        .limit(10);\r\n\r\n        res.json({err: false, topics: Topics, title: Child.title});\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\n//Topic\r\nexport const GetTopic = async (req, res) => {\r\n    try {\r\n        let Topic = await Server.DB.ForumTopics\r\n        .findOne({ link: req.params.link })\r\n        .populate({path: 'category', select: 'title link'})\r\n        .populate({path: 'child', select: 'title link'})\r\n        .populate({ path: 'creator', select: 'profile' })\r\n        .populate({ \r\n            path: 'posts', \r\n            select: 'creator content date',\r\n            populate: [\r\n                { path: 'creator', select: 'profile' }\r\n            ],\r\n        })\r\n        \r\n        if(!Topic) throw 'Bài viết không tồn tại';\r\n\r\n        res.json({err: false, topic: Topic});\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\nexport const CreateTopic = async (req, res) => {\r\n    let {title, content, setting, child } = req.body;\r\n    //content = StringLib.MutiSpace(content, 'g');\r\n\r\n    try {\r\n        if(!req.auth) throw Server.Msg.user.offline;\r\n        if(title == '' || content == '' || setting == '' || child == '') throw 'Dữ liệu đầu vào không đủ';\r\n\r\n        let Child = await Server.DB.ForumChilds\r\n        .findOne({_id: child})\r\n        .select('category vip mod')\r\n        .populate({ path: 'category', select: 'smod' })\r\n\r\n        if(!Child) throw 'Khu vực này không tồn tại hoặc đã bị xóa';\r\n\r\n        if(Child.vip){\r\n            let isMod = Child.mod.find(item => item == req.auth) ? true : false;\r\n            let isSmod = req.auth == (Child.category.smod ? Child.category.smod : null) ? true : false;\r\n\r\n            if(!isSmod && !isMod) throw 'Khu vực vip chỉ dành cho SMod và Mod đăng bài';\r\n        }\r\n\r\n        let newTopic = new Server.DB.ForumTopics({\r\n            category: Child.category._id,\r\n            child: child,\r\n            creator: req.auth,\r\n            title: title,\r\n            content: content,\r\n            setting: {\r\n                noftication: typeof setting.noftication === 'boolean' ? setting.noftication : false,\r\n                post: typeof setting.post === 'boolean' ? setting.post : false,\r\n            }\r\n        });\r\n        \r\n        await newTopic.save();\r\n\r\n        res.json({err: false, link: newTopic.link})\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\nexport const DeleteTopic = async (req, res) => {\r\n    try {\r\n        let ID = req.body.topic;\r\n        if(!req.auth) throw Server.Msg.user.offline;\r\n        if(ID == '') throw 'Dữ liệu đầu vào không đủ';\r\n\r\n        let Topic = await Server.DB.ForumTopics\r\n        .findOne({_id: ID})\r\n        .select('category child creator')\r\n        .populate({ path: 'category', select: 'smod' })\r\n        .populate({ path: 'child', select: 'mod' });\r\n       \r\n        if(!Topic) throw 'Khu vực này không tồn tại hoặc đã bị xóa';\r\n\r\n        let isMod = Topic.child.mod.find(item => item == req.auth) ? true : false;\r\n        let isSmod = req.auth == (Topic.category.smod ? Topic.category.smod : null) ? true : false;\r\n        let isCreator = req.auth == Topic.creator ? true : false;\r\n\r\n        if(!isSmod && !isMod && !isCreator) throw 'Bạn không đủ quyền xóa bài viết';\r\n\r\n        await Topic.remove();\r\n\r\n        res.json({err: false})\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\nexport const EditTopic = async (req, res) => {\r\n    try {\r\n        let ID = req.body.topic;\r\n        let Content = req.body.content;\r\n\r\n        if(!req.auth) throw Server.Msg.user.offline;\r\n        if(ID == '' || Content == '') throw 'Dữ liệu đầu vào không đủ';\r\n\r\n        let Topic = await Server.DB.ForumTopics\r\n        .findOne({_id: ID})\r\n        .select('content creator')\r\n       \r\n        if(!Topic) throw 'Khu vực này không tồn tại hoặc đã bị xóa';\r\n\r\n        let isCreator = req.auth == Topic.creator ? true : false;\r\n\r\n        if(!isCreator) throw 'Bạn không đủ quyền chỉnh sửa bài viết';\r\n\r\n        Topic.content = Content;\r\n        await Topic.save();\r\n\r\n        res.json({err: false});\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\nexport const SettingPostTopic = async (req, res) => {\r\n    try {\r\n        let ID = req.body.topic;\r\n\r\n        if(!req.auth) throw Server.Msg.user.offline;\r\n        if(ID == '') throw 'Dữ liệu đầu vào không đủ';\r\n\r\n        let Topic = await Server.DB.ForumTopics\r\n        .findOne({_id: ID})\r\n        .select('category child creator setting')\r\n        .populate({ path: 'category', select: 'smod' })\r\n        .populate({ path: 'child', select: 'mod' });\r\n       \r\n        if(!Topic) throw 'Khu vực này không tồn tại hoặc đã bị xóa';\r\n\r\n        let isMod = Topic.child.mod.find(item => item == req.auth) ? true : false;\r\n        let isSmod = req.auth == (Topic.category.smod ? Topic.category.smod : null) ? true : false;\r\n        let isCreator = req.auth == Topic.creator ? true : false;\r\n\r\n        if(!isSmod && !isMod && !isCreator) throw 'Bạn không đủ quyền dùng chức năng này';\r\n\r\n        Topic.setting.post = !Topic.setting.post;\r\n        await Topic.save();\r\n\r\n        res.json({err: false})\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\n//Post\r\nexport const CreatePost = async (req, res) => {\r\n    let {topic, content} = req.body;\r\n    content = StringLib.MutiSpace(content, 'g');\r\n\r\n    try {\r\n        if(!req.auth) throw Server.Msg.user.offline;\r\n        if(content == '' || topic == '') throw 'Dữ liệu đầu vào không đủ';\r\n\r\n        let Topic = await Server.DB.ForumTopics.findOne({_id: topic})\r\n        .select('category child setting update creator');\r\n\r\n        if(!Topic) throw 'Bài viết không tồn tại hoặc đã bị xóa';\r\n        if(!Topic.setting.post && (Topic.creator != req.auth)) throw 'Bài viết đã tắt chức năng bình luận';\r\n\r\n        let newPosts = new Server.DB.ForumPosts({\r\n            category: Topic.category,\r\n            child: Topic.child,\r\n            topic: Topic._id,\r\n            creator: req.auth,\r\n            content: content\r\n        });\r\n        await newPosts.save();\r\n        \r\n        Topic.update = Date.now();\r\n        await Topic.save();\r\n\r\n        res.json({err: false, post: newPosts})\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n};\r\n\r\n//Search\r\nexport const Search = async (req, res) => {\r\n    let {key, child, category} = req.body;\r\n    key = StringLib.Case(key, '-');\r\n\r\n    try {\r\n        if(key == '') throw 'Dữ liệu đầu vào không đủ';\r\n\r\n        let Query = {};\r\n        if(child){\r\n            Query['child'] = child;\r\n        }\r\n        if(category){\r\n            Query['category'] = category;\r\n        }\r\n        Query['$text'] = { \r\n            $search: `\\\"${key}\\\"`\r\n        };\r\n        \r\n        let Search = await Server.DB.ForumTopics\r\n        .find(Query)\r\n        .populate({path: 'category', select: 'title'})\r\n        .populate({path: 'child', select: 'title'})\r\n        .populate({path: 'creator', select: 'profile'})\r\n        .populate({path: 'numPosts'})\r\n\r\n        res.json({err: false, topics: Search})\r\n    }\r\n    catch(e){\r\n        res.json({err: true, status: e.toString()})\r\n    }\r\n}"]}